#!/bin/bash 
# i3-Arch        |      Setup X     |   
# t60r	        /|\  i3-BlackArch  /|\
###############################################

# FONT
setfont Lat2-Terminus16

# COLORS
red=$(tput setaf 1)
white=$(tput setaf 7)
green=$(tput setaf 2)
yellow=$(tput setaf 3)

PartOne() {
cd "$HOME"
git clone https://github.com/Blackarch/i3-blackarch.git
if [ -d "$HOME"/i3-blackarch/.scripts-for-setup ]
	then
		cd $HOME/i3-blackarch/.scripts-for-setup
	else
		printf " \n\nWhere is scripts-for-setup  ? \n\n"
fi
echo "                "  >> /etc/motd
echo " Thanks for using i3-Setup " >> /etc/motd
echo " ::  Type  startx   to start i3  :: "  >> /etc/motd 
}

PartArt() {														
clear
cat <<"EOT"															

               ...
             ;::::;
           ;::::; :;	DON'T FEAR THE REAPER... 
         ;:::::'   :;        
        ;:::::;     ;.			-={ i3-BlackArch }=-
       ,:::::'       ;           OOO\
       ::::::;       ;          OOOOO\
       ;:::::;       ;         OOOOOOOO
      ,;::::::;     ;'         / OOOOOOO
    ;:::::::::`. ,,,;.        /  / DOOOOOO
  .';:::::::::::::::::;,     /  /     DOOOO
 ,::::::;::::::;;;;::::;,   /  /        DOOO
;`::::::`'::::::;;;::::: ,#/  /          DOOO
:`:::::::`;::::::;;::: ;::#  /            DOOO
::`:::::::`;:::::::: ;::::# /              DOO
`:`:::::::`;:::::: ;::::::#/               DOO
 :::`:::::::`;; ;:::::::::##                OO
 ::::`:::::::`;::::::::;:::#                OO
 `:::::`::::::::::::;'`:;::#                O
  `:::::`::::::::;' /  / `:#
   ::::::`:::::;'  /  /   `#
EOT
sleep 3
}

PartTwo() {
	printf "\n              :: Lets Do This ::     \n"
	pacman -Syyu --noconfirm
	rm -rf /usr/share/fonts/* &&    ## The script will fail without this line... Dont worry ... fonts will be taken care of
	pacman -S base-devel xorg-server xorg-server-utils feh xorg-font-util xorg-xinit xterm i3-wm i3status dmenu ttf-dejavu xf86-video-vesa xf86-input-synaptics firefox rxvt-unicode urxvt-perls --noconfirm
	X -configure
	if [ -f "$HOME"/xorg.conf.new ]; then
		mv "$HOME"/xorg.conf.new "$HOME"/xorg.conf
	else
		printf "\n\n where is xorg.conf.new ? -- skipping\n\n"
	fi
	printf "Setting Up i3 config in ~/.i3/config "
	wget https://raw.github.com/BlackArch/i3-blackarch/master/.i3/config
	if [ -f "$HOME"/.i3/config ]; then
		rm -rf ~/.i3
		mkdir ~/.i3
		mv config ~/.i3/config
	else 
		mkdir ~/.i3
		mv config ~/.i3/config
		printf " Things seems fine"
	fi
	printf " \n\nSetting up .Xresources, .vimrc and .xinitrc\n\n"
	cp ~/i3-blackarch/.Xresources ~ 
	cp ~/i3-blackarch/.xinitrc ~
	printf "\n\n Do you want the default vim config from blackarch ? Choose 'N' for i3 vim setup   y or n   \n\n"
	printf "\n Choice: "
	read OPTION1
	if [ "$OPTION1" == y -o "$OPTION1" == Y ]; then
		printf " \nThats a big 10-4 \n"
	elif [ "$OPTION1" == n -o "$OPTION1" == N ]; then
		rm -rf ~/.vim && rm ~/.viminfo
		wget https://raw.github.com/t60r/i3-blackarch/master/.vimrc
		cp .vimrc ~/.vimrc
	else
		printf "\n An Error Occured \n\n"
		printf "\n Did you choose 'y'  or 'n' ? \n\n"
	fi

}

HardWare() {
	printf "\033[1m \n\n${green}Are you using intel ?? \033[0m"	
	printf "\033[1m \n ${white}[${green}Y${white}|${red}N${white}] \033[0m"
	printf "\033[1m \n\n${yellow}Answer: ${white}\033[0m"
	read intelstuff
	if [ "$intelstuff" == Y -o "$intelstuff" == y ]; then
		pacman -S intel-dri xf86-video-intel --noconfirm
	else
		printf "\033[1m \n\n ${green}Are you using AMD ? \n\033[0m"
		printf "\033[1m \n ${white}[${green}Y${white}|${red}N${white}] \033[0m"
		printf "\033[1m \n ${yellow}Answer: ${white}\033[0m"
		read amdstuff
		if [ "$amdstuff" == Y -o "$amdstuff" == y ]; then
			pacman -S ati-dri xf86-video-ati --noconfirm
		fi
	fi
}

SetItUp() {
	mkdir "$HOME"/.wallpapers && cd "$HOME"/.wallpapers
	wget https://raw.githubusercontent.com/t60r/blackarch-site/master/images/blackarch-wallpaper-simple.png
	echo "'feh --bg-scale ~/.wallpapers/wallpaper.png'" > "$HOME"/.fehbg
	printf "\n\n Downloading and Setting up Official Blackarch Wallpaper in .wallpapers\n\n"
	printf " Never worry about a wallpaper :)    -- This is for i3-blackarch --look in-- '~/.i3/config' " 
	rm -rf "$HOME"/i3-blackarch
	printf "\n\n If You installed our custom zsh config (pacaur script) you need to reboot\n\n"
	printf "\n For changes to take effect since you are using root\n\n"
	printf "\n Do you need to reboot ?      (Y) or (N)  \n\n"
	read WTFBBQ2
	if [ "$WTFBBQ2" == Y -o "$WTFBBQ2" == y ]; then
		reboot
	else
		printf "\n Thanks for using i3-blackarch  ! \n"
	fi
}


BobTheBuilder() {  
		clear
		printf "\033[1m\n\n ${green}Would you like to setup pacaur ? \n\033[0m"
		printf "\033[1m\n\n ${white}It's an ${red}AUR ${white}helper with cower backend \n\n\033[0m"
		printf "\033[1m\n\n${white}[${green}Y${white}|${red}N${white}]\n\n\033[0m"
		printf "\033[1m\n\n${red}Answer: ${white}\033[0m"
		read thatquestion
		if [ "$thatquestion" == Y -o "$thatquestion" == y ]; then
			printf "\033[1m\n\n ${green}Setting up pacaur for future use \n\n\033[0m"
			pacman -Syy expac yajl --noconfirm
			mkdir "$HOME"/build-dir && cd build-dir
			wget https://aur.archlinux.org/packages/co/cower/cower.tar.gz && tar xzvf cower.tar.gz
			cd cower && makepkg -s --asroot
			pacman -U "$HOME"/build-dir/cower/*.xz --noconfirm
			cd "$HOME"/build-dir
			wget https://aur.archlinux.org/packages/pa/pacaur/pacaur.tar.gz && tar xzvf pacaur.tar.gz
			cd pacaur && makepkg -s --asroot
			pacman -U "$HOME"/build-dir/pacaur/*.xz --noconfirm
			cd "$HOME" && rm -rf "$HOME"/build-dir
		else
			printf "\033[1m\n\n ${yellow}You entered no\n\033[0m"
			printf "\033[1m ${yellow}or an unexpected character \n\033[0m"
			printf "\033[1m\n ${red}Moving on... \n\033[0m"
			sleep 2
		fi
}


UrxvtStuff() {
	clear
	printf "\033[1m\n\n${green}Setting up urxvt for custom i3 setup\n\033[0m"
	printf "\033[1m\n ${yellow}And changing shell to zsh for your user\n\033[0m"
	sleep 2
	if [ ! -d /home/"$namebro"/build-dir ]; then
		mkdir "$HOME"/build-dir
	fi
	pacman -Syy git xorg-xlsfonts flac  gtk3 json-c libasyncns libnotify libogg libpulse libsndfile libvorbis --noconfirm
	cd "$HOME"/build-dir && wget https://aur.archlinux.org/packages/ur/urxvt-tabbedex/urxvt-tabbedex.tar.gz && tar xzvf urxvt-tabbedex.tar.gz
	cd "$HOME"/build-dir/urxvt-tabbedex && makepkg -s --asroot
	pacman -U "$HOME"/build-dir/urxvt-tabbedex/*.xz --noconfirm
	cd "$HOME"/build-dir && wget https://aur.archlinux.org/packages/oh/oh-my-zsh-git/oh-my-zsh-git.tar.gz && tar xzvf oh-my-zsh-git.tar.gz
	cd "$HOME"/build-dir/oh-my-zsh-git && makepkg -s --asroot
	pacman -U "$HOME"/build-dir/oh-my-zsh-git/*.xz --noconfirm
	cd "$HOME"/build-dir && wget https://aur.archlinux.org/packages/ur/urxvt-vtwheel/urxvt-vtwheel.tar.gz && tar xzvf urxvt-vtwheel.tar.gz
	cd "$HOME"/build-dir/urxvt-vtwheel && makepkg -s --asroot
	pacman -U "$HOME"/build-dir/urxvt-vtwheel/*.xz --noconfirm
	cd "$HOME"/build-dir && wget https://aur.archlinux.org/packages/ur/urxvt-font-size-git/urxvt-font-size-git.tar.gz && tar xzvf urxvt-font-size-git.tar.gz
	cd "$HOME"/build-dir/urxvt-font-size-git && makepkg -s --asroot				
	pacman -U "$HOME"/build-dir/urxvt-font-size-git/*.xz --noconfirm
	cd "$HOME"/build-dir && wget https://aur.archlinux.org/packages/pr/prezto-git/prezto-git.tar.gz && tar xzvf prezto-git.tar.gz
	cd "$HOME"/build-dir/prezto-git && makepkg -s --asroot
	pacman -U "$HOME"/build-dir/prezto-git/*.xz --noconfirm 
	cd "$HOME"/build-dir && wget https://aur.archlinux.org/packages/xc/xcursor-ecliz-arch/xcursor-ecliz-arch.tar.gz && tar xzvf xcursor-ecliz-arch.tar.gz
	cd "$HOME"/build-dir/xcursor-ecliz-arch && makepkg -s --asroot
	if [ $(uname -m) = x86_64 ]; then
		pacman -U "$HOME"/build-dir/xcursor-ecliz-arch/*x86_64*.xz --noconfirm
	else	
		pacman -U "$HOME"/build-dir/xcursor-ecliz-arch/*i686*.xz --noconfirm
	fi
	clear
	printf "\nWould You like to Change default shell to ZSH Shell ? ${white}[${green}Y${white}|${red}N${white}] \n\n"
	printf "\n Choice: "
	read datshiz
		if [ "$datshiz" == y -o "datshiz" == Y ]; then
			printf "\033[1m\n${green}Enter your ${red}PASSWORD${yellow} ( Changing Shell to ZSH )\n\033[0m"
			chsh -s $(which zsh)
		fi
	rm -rf "$HOME"/build-dir
}


PartArt2() {
clear
cat <<"EOT"
				TUX IS A BLACKARCHER
                 .88888888:. 
                88888888.88888. 
              .8888888888888888. 
              888888888888888888 
              88' _`88'_  `88888 
              88 88 88 88  88888 
              88_88_::_88_:88888 ~ Sup?
              88:::,::,:::::8888 
              88`:::::::::'`8888 
             .88  `::::'    8:88. 
            8888            `8:888. 
          .8888'             `888888. 
         .8888:..  .::.  ...:'8888888:. 
        .8888.'     :'     `'::`88:88888 
       .8888        '         `.888:8888. 
      888:8     i3  . Archlinux 888:88888 
    .888:88        .:           888:88888: 
    8888888.       ::           88:888888 
    `.::.888.      ::          .88888888 
   .::::::.888.    ::         :::`8888'.:. 
  ::::::::::.888   '         .:::::::::::: 
  ::::::::::::.8    '      .:8::::::::::::. 
 .::::::::::::::.        .:888::::::::::::: 
 :::::::::::::::88:.__..:88888:::::::::::' 
  `'.:::::::::::88888888888.88:::::::::' 
        `':::_:' -- '' -'-' `':_::::'` 
EOT
printf "${red}\n\n NOW STARTING X    ${yellow}   'startx' \n\n"
printf "\n\n ${green}TIP ${white}::${red} In the future you will need to Run startx :: \n\n"
sleep 3 &&
$(startx)
}

MainThing() {
	PartOne	
	PartArt
	BobTheBuilder
	PartTwo
	SetItUp
	UrxvtStuff
	HardWare
	PartArt2
}

MainThing

#EOF
